#!/bin/sh

# alvs       Manages ALVS daemon
#
### BEGIN INIT INFO
# Provides:          ALVS
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description: Starts ALVS daemon
# short-description: ALVS daemon
### END INIT INFO

#includes lsb functions
. /lib/lsb/init-functions

ALVS_CONFIG="/etc/default/alvs"

ALVS_FOLDER="/usr/share/alvs"

DAEMON_NAME="alvs_daemon"
DAEMON="/usr/sbin/$DAEMON_NAME"
PIDFILE="/var/run/$DAEMON_NAME.pid"


# Return
#   0 if daemon has been started
#   1 if daemon was already running
#   2 if daemon could not be started
do_start_daemon() {
   start-stop-daemon --start --quiet --background ${PIDFILE:+--pidfile ${PIDFILE}} --make-pidfile --startas $DAEMON --name $DAEMON_NAME --exec $DAEMON --test > /dev/null || return 1
   start-stop-daemon --start --quiet --background ${PIDFILE:+--pidfile ${PIDFILE}} --make-pidfile --startas $DAEMON --name $DAEMON_NAME --exec $DAEMON -- $ALVS_CP_ARGS || return 2
}

# Return
#   0 if daemon has been stopped
#   1 if daemon was already stopped
#   2 if daemon could not be stopped
#   other if a failure occurred
do_stop_daemon() {
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 ${PIDFILE:+--pidfile ${PIDFILE}} --remove-pidfile --name $DAEMON_NAME --exec $DAEMON
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2
    # Wait for children to finish too if this is a daemon that forks
    # and if the daemon is only ever run from this initscript.
    # If the above conditions are not satisfied then add some other code
    # that waits for the process to drop all resources that could be
    # needed by services started subsequently.  A last resort is to
    # sleep for some time.
    start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 ${PIDFILE:+--pidfile ${PIDFILE}} --remove-pidfile --exec $DAEMON
    [ "$?" = 2 ] && return 2
    # Many daemons don't delete their pidfiles when they exit.
    rm -f $PIDFILE
    return $RETVAL
}


reset_nps () {
    log_action_begin_msg "Reset NPS"
    nps_power --restart por > /dev/null
    case "$?" in
        0) log_action_end_msg 0 
           return 0 ;;
        *) log_action_end_msg 1
           return 1 ;;
    esac
}

power_off_nps() {
    log_action_begin_msg "Power-off NPS"
    nps_power --off > /dev/null
    case "$?" in
        0) log_action_end_msg 0 
           return 0 ;;
        *) log_action_end_msg 1
           return 1 ;;
    esac
}

start_daemon () {
    log_action_begin_msg "Start ALVS daemon"
    do_start_daemon
    case "$?" in
        0) log_action_end_msg 0 
           return 0 ;;
        1) log_progress_msg "already started"
           log_end_msg 0 
           return 0 ;;
        *) log_action_end_msg 1 
           return 1 ;;
    esac
}

stop_daemon () {
    log_action_begin_msg "Stop ALVS daemon"
    do_stop_daemon
    case "$?" in
        0) log_action_end_msg 0 
           return 0 ;;
        1) log_progress_msg "already stopped"
           log_end_msg 0 
           return 0 ;;
        *) log_action_end_msg 1 
           return 1 ;;
    esac
}

start_network() {
    log_action_begin_msg "Start ALVS internal network"
    ifconfig $NETWORK_IF_NAME:alvs_nps 169.254.42.41 netmask 255.255.255.248 up
    case "$?" in
        0) log_action_end_msg 0 
           return 0 ;;
        *) log_action_end_msg 1 
           return 1 ;;
    esac
}

stop_network() {
    log_action_begin_msg "Stop ALVS internal network"
    ifconfig $NETWORK_IF_NAME:alvs_nps down > /dev/null 2>&1
    case "$?" in
        0) log_action_end_msg 0 
           return 0 ;;
        *) log_action_end_msg 1 
           return 1 ;;
    esac
}

start_modules() {
    log_action_begin_msg "Start related modules"
    MODULE=nlmon
    if [  -f /proc/devices -a  -x /sbin/modprobe ]; then
        modprobe $MODULE > /dev/null 2>&1
    fi 
    if /sbin/lsmod | grep $MODULE >/dev/null 2>&1 ; then
        log_action_end_msg 0 
        return 0
    else
        log_action_end_msg 1
        return 1
    fi
}

if [ ! -x $DAEMON ]; then
    log_action_msg "Cannot execute $DAEMON"
    exit 1
fi

if [ -f $ALVS_CONFIG ]; then
    . $ALVS_CONFIG
fi

case "$1" in
    start)
    	start_network
        [ "$?" = 0 ] && reset_nps
        [ "$?" = 0 ] && start_modules
        [ "$?" = 0 ] && start_daemon
        ;;
    stop)
        stop_network
        stop_daemon
        power_off_nps
        ;;
       *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

rc=$?

#if something failed, stop network and ALVS daemon
[ $rc != 0 ] && stop_network
[ $rc != 0 ] && do_stop_daemon

exit $rc
